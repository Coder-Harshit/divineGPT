"""
Defines Pydantic models for the LLM Service API.
"""

from pydantic import BaseModel, Field
from typing import Optional

# --- LLM Service Schemas ---

class LLMServiceRequest(BaseModel):
    """
    Request model for the LLM service's /generate endpoint.
    """
    prompt: str = Field(..., description="The complete prompt to send to the language model.")
    temperature: Optional[float] = Field(None, ge=0.0, le=1.0, description="Sampling temperature.")
    max_new_tokens: Optional[int] = Field(None, gt=0, description="Maximum new tokens to generate.")

class LLMServiceResponse(BaseModel):
    """
    Response model for the LLM service's /generate endpoint.
    """
    response: str = Field(..., description="The raw text response generated by the language model.")

# --- Status Schema ---

class ServiceStatus(BaseModel):
    """
    Generic status response model for the service.
    """
    service: str = Field(..., description="Name of the service.")
    port: Optional[int] = Field(None, description="Port the service is running on.")
    status: str = Field(..., description="Current operational status (e.g., 'running').")
    details: Optional[dict] = Field(None, description="Optional dictionary for additional status details.")

